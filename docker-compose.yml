version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: iotdb
      MYSQL_USER: iotuser
      MYSQL_PASSWORD: iotpass
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -proot || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - iot-net

  redis:
    image: redis:7
    container_name: iot_redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - iot-net

  backend:
    build:
      context: ./backend
    container_name: iot-backend
    restart: always
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/iotdb
      SPRING_DATASOURCE_USERNAME: iotuser
      SPRING_DATASOURCE_PASSWORD: iotpass
      SPRING_REDIS_HOST: iot_redis
      SPRING_REDIS_PORT: 6379
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - iot-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: iot-frontend
    ports:
      - "4200:4200"
    depends_on:
      backend:
        condition: service_started
    networks:
      - iot-net
    command: ["npx", "ng", "serve", "--host", "0.0.0.0", "--port", "4200"]

  jenkins:
    build:
      context: .
      dockerfile: Dockerfile.jenkins
    container_name: jenkins-cicd
    restart: always
    user: root
    ports:
      - "8081:8080"
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - iot-net

  sonarqube:
    image: sonarqube:9.9-community
    container_name: sonarqube
    restart: always
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - iot-net

volumes:
  mysql-data:
  jenkins-data:
  sonarqube_data:
  sonarqube_extensions:

networks:
  iot-net:
    driver: bridge
